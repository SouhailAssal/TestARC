name: call-workflow

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

jobs:
  build-sut:
    runs-on: [Windows,vtt-6.3]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: update Microsar-SIP via SVN
        shell: powershell 
        run: |
          Write-Host "Before svn update:"
          ls
          ${{ github.workspace }}/.github/scripts/get-repo.ps1 -configFile "${{ github.workspace }}/microsar-sip-svn-config.json" -SvnUser "${{ secrets.SVN_USER }}" -SvnPassword "${{ secrets.SVN_PASSWORD }}"
          Write-Host "Result:"
          ls
      - name: Run DaVinci & VTT
        run: |
            VttMake make ./ECU/LightControl.vttmake;
            if(-Not $?)
            {
              Write-Host "VttMake step failed." -ForegroundColor red
              Exit -1
            }       
      - name: Export ECU/SUT
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: SUT
          path: ./ECU/SUT
          retention-days: 7
      - name: Check dll 
        run : ls ECU/SUT/
          
  compile-tests:
    needs: build-sut
    runs-on: [Windows,testunitbuild-cli-7.4]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Compile tests
        run : TestUnitBuildCLI ./test/vTeststudio/LightControl.vtsoproj
      - name: Export compiled tests
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: Compiled tests
          path: |
            ./test/vTeststudio/auto
            ./test/vTeststudio/basic
          retention-days: 7

          
  compile-simulation:
    needs: compile-tests
    runs-on: [Windows,canoe4sw-16.4]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Fetch SUT Artifact
        uses: actions/download-artifact@v3
        with:
          name: SUT
          path: ECU/SUT     
        env:
          http_proxy: ""
          https_proxy: ""
      - name: Fetch test artifact
        uses: actions/download-artifact@v3
        with:
          name: Compiled tests
          path: test/vTESTstudio  
        env:
          http_proxy: ""
          https_proxy: ""
      # if a previous workflow run aborts due to error before the 'clean temporary folder' step can run, the cleaning at the end is ommitted,
      # thus we make sure this temp folder space is clean even in this case:
      - name: clean temporary folder 
        run:  if (Test-Path -LiteralPath C:/LightControl_temp) { rmdir C:/LightControl_temp -Force  -Recurse }
      - name: Copy workspace contents to shorter path
        shell: powershell 
        run: Copy-Item -Path "C:/actions-runner/_work/cdevops-light-control-upstream/cdevops-light-control-upstream" -Destination "C:/LightControl_temp" -Recurse -Force
      - name: Compile simulation
        working-directory: "C:/LightControl_temp"
        run: |
            environment-make -o ./environment-make -A Win32 ./environment-make/venvironment.yaml;
            test-unit-make -e ./environment-make/Default.venvironment -o ./environment-make/ ./test/vTestStudio/basic/basic.vtuexe ./test/vTestStudio/auto/auto.vtuexe;
      - name: Copy contents from C:/LightCtrl to workspace
        shell: powershell
        run: Copy-Item -Path "C:/LightControl_temp" -Destination "C:/actions-runner/_work/cdevops-light-control-upstream/cdevops-light-control-upstream"  -Recurse -Force
      - name: Export environment-make
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: environment-make
          path: ./LightControl_temp/environment-make/
          retention-days: 7
      - name: clean temporary folder
        run:  rmdir C:/LightControl_temp -Force  -Recurse
 
  run-tests-simulation:
    needs: compile-simulation
    runs-on: [Windows,canoe4sw-16.4]
    strategy:
      matrix:
        TESTNAME: [auto.vtestunit, basic.vtestunit]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fetch SUT Artifact
        uses: actions/download-artifact@v3
        with:
          name: SUT
          path: ECU/SUT        
        env:
          http_proxy: ""
          https_proxy: ""
      - name: Fetch venvironment artifact
        uses: actions/download-artifact@v3
        with:
          name: environment-make
          path: environment-make        
        env:
          http_proxy: ""
          https_proxy: ""
      - name: Fetch test artifact
        uses: actions/download-artifact@v3
        with:
          name: Compiled tests
          path: test/vTESTstudio       
        env:
          http_proxy: ""
          https_proxy: ""
      - name: run_canoe
        id: canoe
        run : |
          & canoe4sw-se ./environment-make/Default.venvironment -d ./test-${{ matrix.TESTNAME }} --win32 --port-rtk-api none --test-unit ./environment-make/${{ matrix.TESTNAME }};
          echo "The last exit code is  $LASTEXITCODE"
      - name: Copy Test Results
        if: always()
        run : |
          Copy-Item -Path "./test-${{ matrix.TESTNAME }}/TestReports/" -Destination "./TestReports/" -Recurse ;
          New-Item -ItemType "directory" "./test-${{ matrix.TESTNAME }}/wlog-files" ; Move-Item -Path "./test-${{ matrix.TESTNAME }}/*.wlog","./test-${{ matrix.TESTNAME }}/*.wlog.txt" -Destination "./test-${{ matrix.TESTNAME }}/wlog-files/";
          Write-Host "exporting wlog binary log files to readable format ...";
          Get-ChildItem ./test-${{ matrix.TESTNAME }}/wlog-files/ -Filter *.wlog | 
          Foreach-Object {
            $fullName = $_.FullName
            Write-Host "  - exporting $fullName to readable asci text ...";
            $content = wlogdump.exe $fullName
            $content | Set-Content ($fullName + '.txt')
          }
      - name: Export Test Reports
        if: always()
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: Test Reports
          path: |
            ./TestReports/
            ./test-${{ matrix.TESTNAME }}/wlog-files
          retention-days: 7

  display-test-report:
    if: ${{ !cancelled() }}
    needs: run-tests-simulation
    runs-on: [Windows,testReportViewer-16.3]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fetch testreport artifact
        uses: actions/download-artifact@v3
        with:
          name: Test Reports
          path: TestReports/        
        env:
          http_proxy: ""
          https_proxy: "" 
      - name: generate report
        run : |
          ReportViewerCli -r ./TestReports/TestReports/auto.vtestreport -e;
          cscript.exe ./test/report-styles/xunit/xUnitTransform.vbs ./TestReports/TestReports/auto.xml ./TestReports/TestReports/auto_xunit.xml;
          ReportViewerCli -r ./TestReports/TestReports/basic.vtestreport -e;
          cscript.exe ./test/report-styles/xunit/xUnitTransform.vbs ./TestReports/TestReports/basic.xml ./TestReports/TestReports/basic_xunit.xml;

      - name: Export Test Reports in XML
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: Test Reports in XML
          path: |
            ./TestReports/TestReports/auto_xunit.xml
            ./TestReports/TestReports/basic_xunit.xml
            ./TestReports/TestReports/*.vtestreport
          retention-days: 7
      - uses: dorny/test-reporter@v1.6.0
        with:
          fail-on-error: "false"
          name: CANoe4SW_SE Tests                   # Name of the check run which will be created
          path: "./TestReports/TestReports/*_xunit.xml"  # Path to test results
          reporter: java-junit                      # Format of test results
        env:
          # Explicitly disable the Proxy, as NODE seems to ignore no_proxy
          http_proxy: ""
          https_proxy: ""
