name: ECU Test BSW Emulation

on:
  push:
    paths-ignore:
      - Integration
      - .github/workflows/prototype-integration.yaml
    branches:
      - 'main'
  pull_request:
    paths-ignore:
      - Integration
      - .github/workflows/prototype-integration.yaml
  workflow_dispatch:

jobs:
  build-sut:
    runs-on: vtt-6.3.56
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run VTT
        working-directory: BSW-Emulation
        run: |
            VttMake make ./FanControlECU/FanControl_VTT/FanControl.vttmake;
            if(-Not $?)
            {
              Write-Host "VttMake step failed." -ForegroundColor red
              Exit -1
            }
      - name: Export Logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: Logs
          path: |
            ./BSW-Emulation/FanControlECU/FanControl_ECU/Log/
          retention-days: 7

      - name: Export ECU/SUT
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: SUT
          path: ./BSW-Emulation/FanControlECU/FanControl_VTT/SUT
          retention-days: 7
      - name: Check dll 
        run : ls ./BSW-Emulation/FanControlECU/FanControl_VTT/SUT
          
  compile-tests:
<<<<<<< HEAD:.github/workflows/prototype-emulation.yaml
=======
    needs: build-sut
>>>>>>> b19a87c3d59aceaeca8c1263a19c5175b60f2729:.github/workflows/main.yaml
    runs-on: canoe-17.3.91
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Compile tests
        working-directory: BSW-Emulation/FanControlECU/FanControl_Testing
        run : TestUnitBuildCLI ./vTESTstudio_FanControl.vtsoproj
      - name: Export compiled tests
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: Compiled tests
          path: |
            ./BSW-Emulation/FanControlECU/FanControl_Testing/tu_Diagnostic
            ./BSW-Emulation/FanControlECU/FanControl_Testing/tu_FanTests
          retention-days: 7

          
  compile-simulation:
<<<<<<< HEAD:.github/workflows/prototype-emulation.yaml
    needs: [compile-tests, build-sut]
=======
    needs: compile-tests
>>>>>>> b19a87c3d59aceaeca8c1263a19c5175b60f2729:.github/workflows/main.yaml
    runs-on: canoe-17.3.91
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Fetch SUT Artifact
        uses: actions/download-artifact@v3
        with:
          name: SUT
          path: ./BSW-Emulation/FanControlECU/FanControl_VTT/SUT  
        env:
          http_proxy: ""
          https_proxy: ""
      - name: Fetch test artifact
        uses: actions/download-artifact@v3
        with:
          name: Compiled tests
          path: ./BSW-Emulation/FanControlECU/FanControl_Testing/
        env:
          http_proxy: ""
          https_proxy: ""
      # if a previous workflow run aborts due to error before the 'clean temporary folder' step can run, the cleaning at the end is ommitted,
      # thus we make sure this temp folder space is clean even in this case:
      - name: clean temporary folder 
        run:  if (Test-Path -LiteralPath C:/workspace_temp) { Remove-Item -Path C:/workspace_temp -Force  -Recurse }
      - name: Copy workspace contents to shorter path
        shell: powershell 
        run: Copy-Item -Path "${{ github.workspace }}" -Destination "C:/workspace_temp" -Recurse -Force
      - name: Compile simulation
        working-directory: "C:/workspace_temp/BSW-Emulation"
        run: |
            environment-make -o ./SimulationEnvironments/ECU/environment-make -A Win32 ./SimulationEnvironments/ECU/;
      - name: Compile Test Units
        working-directory: "C:/workspace_temp/BSW-Emulation"
        run: |
            test-unit-make -e ./SimulationEnvironments/ECU/environment-make/Default.venvironment -o ./SimulationEnvironments/ECU/environment-make/ `
              ./FanControlECU/FanControl_Testing/tu_FanTests/tu_FanTests.vtuexe;
          # Not compiling ./FanControlECU/FanControl_Testing/tu_Diagnostic/tu_Diagnostic.vtuexe as diagnostics is not supported in CANoe4SW SE yet.
      - name: Copy contents from C:/workspace_temp to workspace
        shell: powershell
        run: Copy-Item -Path "C:/workspace_temp/*" -Destination "${{ github.workspace }}"  -Recurse -Force;
      - name: clean temporary folder
        run:  Remove-Item -Path C:/workspace_temp -Force  -Recurse
      - name: Export environment-make
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: environment-make
          path: ./BSW-Emulation/SimulationEnvironments/ECU/environment-make/
          retention-days: 7
 
  run-tests-simulation:
    needs: compile-simulation
    runs-on: canoe-17.3.91
    strategy:
      matrix:
        TESTNAME: [tu_FanTests.vtestunit]
        # Not testing tu_Diagnostic.vtestunit as diagnostics is not supported in CANoe4SW SE yet.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fetch SUT Artifact
        uses: actions/download-artifact@v3
        with:
          name: SUT
          path: ./BSW-Emulation/FanControlECU/FanControl_VTT/SUT
        env:
          http_proxy: ""
          https_proxy: ""
      - name: Fetch venvironment artifact
        uses: actions/download-artifact@v3
        with:
          name: environment-make
          path: ./BSW-Emulation/SimulationEnvironments/ECU/environment-make/
        env:
          http_proxy: ""
          https_proxy: ""
      - name: Fetch test artifact
        uses: actions/download-artifact@v3
        with:
          name: Compiled tests
          path: ./BSW-Emulation/FanControlECU/FanControl_Testing       
        env:
          http_proxy: ""
          https_proxy: ""
      - name: run_canoe
        id: canoe
        working-directory: "BSW-Emulation"
        run : |
          & canoe4sw-se ./SimulationEnvironments/ECU/environment-make/Default.venvironment `
                        -d ./test-${{ matrix.TESTNAME }} `
                        --variant-property vTestExpectedToFail=ExpectedToSucceed `
                        --win32 `
                        --port-rtk-api none `
                        --test-unit ./SimulationEnvironments/ECU/environment-make/${{ matrix.TESTNAME }} `
                        --verbosity-level=3;
          echo "The last exit code is  $LASTEXITCODE"
      - name: Copy Test Results
        if: always()
        working-directory: "BSW-Emulation"
        run : |
          Copy-Item -Path "./test-${{ matrix.TESTNAME }}/TestReports/" -Destination "./TestReports/" -Recurse ;
          New-Item -ItemType "directory" "./test-${{ matrix.TESTNAME }}/wlog-files" ; Move-Item -Path "./test-${{ matrix.TESTNAME }}/*.wlog","./test-${{ matrix.TESTNAME }}/*.wlog.txt" -Destination "./test-${{ matrix.TESTNAME }}/wlog-files/";
          Write-Host "exporting wlog binary log files to readable format ...";
          Get-ChildItem ./test-${{ matrix.TESTNAME }}/wlog-files/ -Filter *.wlog | 
          Foreach-Object {
            $fullName = $_.FullName
            Write-Host "  - exporting $fullName to readable asci text ...";
            $content = wlogdump.exe $fullName
            $content | Set-Content ($fullName + '.txt')
          }
      - name: Export Test Reports
        if: always()
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: Test Reports
          path: |
            ./BSW-Emulation/TestReports/
            ./BSW-Emulation/test-${{ matrix.TESTNAME }}/wlog-files
          retention-days: 7

  display-test-report:
    if: ${{ !cancelled() }}
    needs: run-tests-simulation
    runs-on: canoe-17.3.91
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Fetch testreport artifact
        uses: actions/download-artifact@v3
        with:
          name: Test Reports
          path: BSW-Emulation/        
        env:
          http_proxy: ""
          https_proxy: "" 
      - name: generate report
        working-directory: "BSW-Emulation"
        run : |
          ReportViewerCli -r ./TestReports/tu_FanTests.vtestreport -e;
          cscript.exe ../report-styles/xunit/xUnitTransform.vbs ./TestReports/tu_FanTests.xml ./TestReports/tu_FanTests_xunit.xml;
        # ReportViewerCli -r ./TestReports/TestReports/tu_Diagnostic.vtestreport -e;
        # cscript.exe ../report-styles/xunit/xUnitTransform.vbs ./TestReports/tu_Diagnostic.xml ./TestReports/tu_Diagnostic_xunit.xml;
          
      - name: Export Test Reports in XML
        uses: actions/upload-artifact@v3
        env: 
          http_proxy: ""
          https_proxy: "" 
        with:
          name: Test Reports in XML
          path: |
            ./BSW-Emulation/TestReports/*_xunit.xml
            ./BSW-Emulation/TestReports/*.vtestreport
          retention-days: 7
      - uses: dorny/test-reporter@v1.6.0
        with:
          fail-on-error: "false"
          name: CANoe4SW_SE Tests                   # Name of the check run which will be created
          path: "./BSW-Emulation/TestReports/*_xunit.xml"  # Path to test results
          reporter: java-junit                      # Format of test results
        env:
          # Explicitly disable the Proxy, as NODE seems to ignore no_proxy
          http_proxy: ""
          https_proxy: ""
